package inf:wasi;

world engine-world {
  import engine;
  export engine;
}

/// Inference (inf) is a WebAssembly Interface Types (WIT) interface for
/// language model inference.
interface engine {
  /// The `version` function returns the version of the inference interface.
  version: func() -> string;

  /// Initialize the inference runtime engine.
  /// TODO: use a result as the return type instead of bool
  //export init: func(config: config-types.config) -> bool;

  /// Run the inference
  /// TODO: use a result as the return type instead of bool, and make it and
  /// record type perhaps with different types, could be string or raw logits.
  inference: func(prompt: string) -> string;
}

world inference-world {
  import engine;
  import config;
  export inference;
}

interface inference {
  compute: func() -> string;
}

world config-world {
  export config;
}

interface config-types {
  record config {
    model-path: string,
    prompt: string,
  }
}

interface config {
  use config-types.{config};

  get-config: func() -> config;
}
