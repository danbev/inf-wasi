package inf:wasi;

world engine-world {
  import engine;
  export engine;
}

interface engine {
  use config-types.{config};

  resource engine {
    constructor(config: config);

    /// The `version` function returns the version of the inference engine.
    version: static func() -> string;

    /// Run the inference
    /// TODO: use a result as the return type instead of bool, and make it and
    /// record type perhaps with different types, could be string or raw logits.
    inference: func(prompt: string) -> string;
  }
}

world config-world {
  export config;
  export config-types;
}

interface config-types {
  record config {
    model-path: string,
    prompt: string,
  }
}

interface config {
  use config-types.{config};

  get-config: func() -> config;
}

world inference-world {
  import engine;
  import config;
  export compute: func(prompt: option<string>) -> string;
}
